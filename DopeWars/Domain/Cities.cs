using System.Collections.ObjectModel;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DopeWars.Domain;
//
//    var cities = Cities.FromJson(jsonString);

namespace DopeWars.Domain
{

    public class Cities
    {
        public static ObservableCollection<string> FromJson(string json) => JsonConvert.DeserializeObject<ObservableCollection<string>>(json, CitiesConverter.CitiesSettings);
    }

    public static class CitiesSerialize
    {
        public static string ToJson(this ObservableCollection<string> self) => JsonConvert.SerializeObject(self, CitiesConverter.CitiesSettings);
    }

    internal static class CitiesConverter
    {
        public static readonly JsonSerializerSettings CitiesSettings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
