using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DopeWars.Domain;
//
//    var drugs = Drugs.FromJson(jsonString);

namespace DopeWars.Domain
{
    public partial class Drugs
    {
        [JsonProperty("Pot", NullValueHandling = NullValueHandling.Ignore)]
        public List<long> Pot { get; set; }

        [JsonProperty("Cocaine", NullValueHandling = NullValueHandling.Ignore)]
        public List<long> Cocaine { get; set; }

        [JsonProperty("Meth", NullValueHandling = NullValueHandling.Ignore)]
        public List<long> Meth { get; set; }

        [JsonProperty("Zanax", NullValueHandling = NullValueHandling.Ignore)]
        public List<long> Zanax { get; set; }
    }

    public partial class Drugs
    {
        public static Drugs FromJson(string json) => JsonConvert.DeserializeObject<Drugs>(json, DrugConverter.DrugSettings);
    }

    public static class DrugSerialize
    {
        public static string ToJson(this Drugs self) => JsonConvert.SerializeObject(self, DrugConverter.DrugSettings);
    }

    internal static class DrugConverter
    {
        public static readonly JsonSerializerSettings DrugSettings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
